import { NavigateOptions } from './link.js';
import { AnyRoute } from './route.js';
import { RoutePaths } from './routeInfo.js';
import { RegisteredRouter } from './router.js';
export type AnyRedirect = Redirect<any, any, any, any, any>;
export type Redirect<TRouteTree extends AnyRoute = RegisteredRouter['routeTree'], TFrom extends RoutePaths<TRouteTree> = '/', TTo extends string = '', TMaskFrom extends RoutePaths<TRouteTree> = TFrom, TMaskTo extends string = ''> = {
    code?: number;
    throw?: any;
    href?: string;
} & NavigateOptions<TRouteTree, TFrom, TTo, TMaskFrom, TMaskTo>;
export declare function redirect<TRouteTree extends AnyRoute = RegisteredRouter['routeTree'], TFrom extends RoutePaths<TRouteTree> = '/', TTo extends string = '', TMaskFrom extends RoutePaths<TRouteTree> = TFrom, TMaskTo extends string = ''>(opts: Redirect<TRouteTree, TFrom, TTo, TMaskFrom, TMaskTo>): Redirect<TRouteTree, TFrom, TTo, TMaskFrom, TMaskTo>;
export declare function isRedirect(obj: any): obj is AnyRedirect;
